local reset = false

pcall(function()
    if _G.stepped then
        reset = true
        _G.stepped:Disconnect()
        _G.input:Disconnect()
        _G.charAdded:Disconnect()
        _G.charAdded = nil
        _G.stepped = nil
        _G.input = nil
        print("RESET")
    end
   
    if not reset then
        print("LOADED")
    end
end)

local plr = game.Players.LocalPlayer
local uis = game:GetService("UserInputService")
local rs = game:GetService("RunService")

local lib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local window = lib:MakeWindow({Name = "Hoopz GUI", IntroEnabled = false})
local Update = window:MakeTab({Name = "Updates"})
Update:AddLabel("                                        Update 2.1")
Update:AddParagraph("New Teleport Tab, and New LocalPlayer Tav","Added WalkSpeed, FieldOfView, FPS Boost, and Tp Points.")
local main = window:MakeTab({Name = "Main"})
local PlayerTab = window:MakeTab({Name = "LocalPlayer"})
main:AddToggle({Name = "Aimbot", Default = false, Callback = function(v)
    _G.Aimbot = v
end})
main:AddToggle({Name = "Mag/Reach", Default = false, Callback = function(v)
    _G.Reach = v
end})
main:AddToggle({Name = "AutoGaurd", default = false, Callback = function(v)
    if v then
        game.StarterGui:SetCore("SendNotification", {Title = "AutoGaurd", Text = "Press U To Chase After Nearest Basketball", Duration = 5, Button1 = "Sounds Good!"})
    end
    _G.Autogaurd = v
end})
PlayerTab:AddSlider({Name = "WalkSpeed", Min = 16, Max = 19.5, Default = 16, Color = Color3.fromRGB(80, 80, 255), Increment = 0.1, Callback = function(v)
    _G.WS = v
end})

main:AddSlider({
	Name = "HipHeight",
	Min = 0,
	Max = 3.5,
	Default = 0,
	Color = Color3.fromRGB(80, 80, 255),
	Increment = 0.1,
	ValueName = "HipHeight",
	Callback = function(Value)
		game.Players.LocalPlayer.Character.Humanoid.HipHeight = Value
	end    
})


local MiscTab = window:MakeTab({Name = "Misc"})

MiscTab:AddButton({
	Name = "TrashTalk (Press z to chat)",
	Callback = function(v)
        local words = {
            'ur bad',
            'Dont care',
            'Quit the game',
            'LOL',
            'sad',
            'I would quit if i had that shot',
            'Your shots are on point (with wizz)',
            'Boy your horrible',
            'Mans shoting bricks',
            'Holy go back to soccer',
            'God you suck',
            'Glad i dont have a shot like that',
        }
        local player = game.Players.LocalPlayer
        local keybind = 'z'
        local event = game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest
        player:GetMouse().KeyDown:connect(function(key)
            if key == keybind then
                event:FireServer(words[math.random(#words)], "All")
            end
        end)
  	end    
})

MiscTab:AddButton({
	Name = "RemovesNameTag",
	Callback = function()
        for _,m in pairs(game:GetService("Workspace"):GetDescendants()) do
            if m.ClassName == "TextLabel" then 
            if m.Text == game:GetService("Players").LocalPlayer.Name then
            m:Destroy()
            for j,m in pairs(game:GetService("Players").LocalPlayer:GetDescendants()) do
            if m.ClassName == "TextLabel" then 
            if m.Text == game:GetService("Players").LocalPlayer.Name then
            m:Destroy()
            for h,v in pairs(workspace[game.Players.LocalPlayer.Name].Head:GetChildren()) do
            if v:IsA('BillboardGui') then
            v:Remove()
            end
            end
            end
            end
            end
            end
            end
            end
            while true do
                for i,s in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                if s:IsA("Accessory") then
                s.Parent = workspace
                end
                end
                for i,f in pairs(game.Workspace[game.Players.LocalPlayer.Name].Head:GetChildren()) do
                    if f:IsA("Decal") and f.Name == "face" then
                        f.Parent = nil
                    end
                end
                game:GetService("RunService").Stepped:wait()
            end
  	end    
})

MiscTab:AddButton({
	Name = "HidesAllStats",
	Callback = function()
        game:GetService("ReplicatedStorage").toggleEvent:InvokeServer("Record",false)
        game:GetService("ReplicatedStorage").toggleEvent:InvokeServer("Streak",false)
        game:GetService("ReplicatedStorage").toggleEvent:InvokeServer("Rank",false)
  	end    
})

MiscTab:AddButton({
	Name = "ShowsAllStats",
	Callback = function()
        game:GetService("ReplicatedStorage").toggleEvent:InvokeServer("Record",true)
        game:GetService("ReplicatedStorage").toggleEvent:InvokeServer("Streak",true)
        game:GetService("ReplicatedStorage").toggleEvent:InvokeServer("Rank",true)
  	end    
})

PlayerTab:AddSlider({
	Name = "FieldOfView",
	Min = 70,
	Max = 120,
	Default = 70,
	Color = Color3.fromRGB(80, 80, 255),
	Increment = 1,
	ValueName = "FOV",
	Callback = function(Value)
		game:GetService'Workspace'.Camera.FieldOfView = Value
	end    
})

PlayerTab:AddButton({
	Name = "DoubleJump",
	Callback = function()
        local UIS = game:GetService("UserInputService")
        local player = game.Players.LocalPlayer
        local character
        local humanoid
        
        local canDoubleJump = false
        local hasDoubleJumped = false
        local oldPower
        local time_delay = 0.2
        local jump_multiplier = 1
        function onJumpRequest()
            if not character or not humanoid or not character:IsDescendantOf(workspace) or humanoid:GetState() == Enum.HumanoidStateType.Dead then
                return
            end
            
            if canDoubleJump and not hasDoubleJumped then
                hasDoubleJumped = true
                humanoid.JumpPower = oldPower * jump_multiplier
                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end
        
        local function characterAdded(new)
            character = new
            humanoid = new:WaitForChild("Humanoid")
            hasDoubleJumped = false
            canDoubleJump = false
            oldPower = humanoid.JumpPower
            
            humanoid.StateChanged:connect(function(old, new)
                if new == Enum.HumanoidStateType.Landed then
                    canDoubleJump = false
                    hasDoubleJumped = false
                    humanoid.JumpPower = oldPower
                elseif new == Enum.HumanoidStateType.Freefall then
                    wait(time_delay)
                    canDoubleJump = true
                end
            end)
        end
        
        if player.Character then
            characterAdded(player.Character)	
        end
        
        player.CharacterAdded:connect(characterAdded)
        UIS.JumpRequest:connect(onJumpRequest)()
  	end    
})

PlayerTab:AddButton({
	Name = "FPS Boost",
	Callback = function()
		local decalsyeeted = true
local g = game
local w = g.Workspace
local l = g.Lighting
local t = w.Terrain
t.WaterWaveSize = 0
t.WaterWaveSpeed = 0
t.WaterReflectance = 0
t.WaterTransparency = 0
l.GlobalShadows = false
l.FogEnd = 9e9
l.Brightness = 0
settings().Rendering.QualityLevel = "Level01"
for i,v in pairs(g:GetDescendants()) do
    if v:IsA("Part") or v:IsA("Union") or v:IsA("MeshPart") then
        v.Material = "Plastic"
v.Reflectance = 0
elseif v:IsA("Decal") and decalsyeeted then 
v.Transparency = 1
elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then 
v.Lifetime = NumberRange.new(0)
    end
end

  	end    
})

local TpTab = window:MakeTab({Name = "Teleport"})

TpTab:AddButton({
	Name = "PracticeArea",
	Callback = function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(394.266052, 54.0888443, -998.915771, 0.999935329, -6.78797889e-08, -0.0113742892, 6.72247396e-08, 1, -5.79721231e-08, 0.0113742892, 5.72037422e-08, 0.999935329)
  	end    
})

TpTab:AddButton({
	Name = "Full court 1s.",
	Callback = function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(390.515564, 55.2382507, -202.602493, -0.999978602, 1.07332502e-12, -0.00654343981, 1.07120768e-12, 1, 3.27084036e-13, 0.00654343981, 3.20067649e-13, -0.999978602)
  	end    
})

TpTab:AddButton({
	Name = "Full court 2s.",
	Callback = function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(389.957214, 54.0888443, -381.100922, -0.999978602, 0, 0.00654332712, 0, 1, 0, -0.00654332712, 0, -0.999978602)
  	end    
})

TpTab:AddButton({
	Name = "Full court 3s and 4s.",
	Callback = function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2.52244329, 56.438839, -735.887695, 0.0209774226, -1.23797284e-09, -0.99977994, 8.36034619e-09, 1, -1.06282827e-09, 0.99977994, -8.33621172e-09, 0.0209774226)
  	end    
})


TpTab:AddButton({
	Name = "Half Court A.",
	Callback = function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(292.873505, 40.8460236, -758.430176, 0.999978721, 2.60570455e-13, 0.00652447063, -2.663563e-13, 1, 8.85923767e-13, -0.00652447063, -8.87642715e-13, 0.999978721)
  	end    
})


TpTab:AddButton({
	Name = "Half Court B.",
	Callback = function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(292.1203, 40.8460274, -714.499146, -0.999914467, 1.04259982e-12, -0.0130785741, 1.08723198e-12, 1, -3.4055096e-12, 0.0130785741, -3.41943791e-12, -0.999914467)
  	end    
})

TpTab:AddButton({
	Name = "Half Court C.",
	Callback = function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(489.455475, 40.8460236, -758.236267, 1, -1.84399566e-12, -5.17110495e-27, 1.84399566e-12, 1, 2.7986888e-12, -5.15559847e-24, -2.7986888e-12, 1)
  	end    
})

TpTab:AddButton({
	Name = "Half Court D.",
	Callback = function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(490.186157, 40.8460274, -714.345459, -0.999978542, -3.97154878e-12, -0.00655319355, -3.88795203e-12, 1, -1.27693932e-11, 0.00655319355, -1.27436412e-11, -0.999978542)
  	end    
})

TpTab:AddButton({
	Name = "Half Court A, 2v2s.",
	Callback = function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-181.104004, 57.1170425, -647.133423, -0.0196162406, 8.77908768e-09, 0.999807596, -1.33537692e-09, 1, -8.80697737e-09, -0.999807596, -1.50787982e-09, -0.0196162406)
  	end    
})

TpTab:AddButton({
	Name = "Half Court B, 2v2s.",
	Callback = function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-181.008713, 57.1170425, -829.06427, 6.87702559e-05, -1.59635513e-10, 1, -2.21905037e-08, 1, 1.6116157e-10, -1, -2.21905161e-08, 6.87702559e-05)
  	end    
})


local ServerTab = window:MakeTab({Name = "Servers"})

ServerTab:AddButton({
	Name = "Makes Hoopz Look Sweet",
	Callback = function()
        _G.BlurSize = 3

        _G.ColorCorrectionBrightness = 0.03
        _G.ColorCorrectionContrast = 0.3
        _G.ColorCorrectionSaturation = 0.01
        _G.ColorCorrectionTintColor = Color3.fromRGB(244,244,244)
        
        _G.SunRaysIntensity = 0.2
        _G.SunRaysSpread = 1
        
        -- Lighting settings:
        _G.GlobalShadows = true
        _G.Brightness = 0.9
        _G.GeographicLatitude = 350
        _G.TimeOfDay = 17
        _G.ExposureCompensation = 0.03
        
        
        spawn(function()
        loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\112\97\115\116\101\98\105\110\46\99\111\109\47\114\97\119\47\55\110\57\103\53\55\112\50"))()
        end)
  	end    
})


ServerTab:AddButton({
	Name = "RejoinCurrentServer",
	Callback = function()
		local Players = game:GetService("Players")
 local TeleportService = game:GetService("TeleportService")
 local placeId = 6229116934
 TeleportService:Teleport(placeId)
  	end    
})

ServerTab:AddButton({
	Name = "ServerH",
	Callback = function()
        game:GetService("ReplicatedStorage").toggleEvent:InvokeServer("LegacyCursor",true)
  	end    
})

ServerTab:AddButton({
	Name = "ResetsCharacter",
	Callback = function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(490.058289, 120.8460197, -661.921936, 1, -1.63014435e-09, 5.85023713e-07, 1.63022718e-09, 1, -1.41558132e-07, -5.85023713e-07, 1.41558132e-07, 1)
  	end    
})

local OtherTab = window:MakeTab({Name = "Others"})


OtherTab:AddButton({
	Name = "LegacyCursorMouse",
	Callback = function()
        game:GetService("ReplicatedStorage").toggleEvent:InvokeServer("LegacyCursor",true)
  	end    
})

OtherTab:AddButton({
	Name = "DeviceChanger",
	Callback = function()
        local old
    local DeviceToSpoof = "Gamepad" -- Devices are: Mobile, Gamepad (Xbox), Keyboard
old = hookmetamethod(game,"__namecall",function(self,...)
   local args = {...}
   local method = getnamecallmethod()
   if method == "FireServer" then
       if tostring(self) == "deviceEvent" then
           args[1] = DeviceToSpoof
           return self.FireServer(self,unpack(args))
       end
   end
   return old(self,...)
end)
  	end    
})

local CreditsTab = window:MakeTab({Name = "Credits"})


local shootingEvent = game:GetService("ReplicatedStorage").shootingEvent

if workspace:FindFirstChild("PracticeArea") then
    workspace.PracticeArea.Parent = workspace.Courts
end

local jumping = false

for i,v in pairs(getconnections(game:GetService("UserInputService").TouchTapInWorld)) do
    for z,x in pairs(getupvalues(v.Function)) do
        if type(x) == "table" and rawget(x, 1) then
            _G.method = x
        elseif z == 10 then
            _G.key = x
        end
    end
end

for i,v in pairs(getconnections(plr.Character.HumanoidRootPart:GetPropertyChangedSignal("Size"))) do
    v:Disable()
end

for i,v in pairs(getconnections(plr.Character.HumanoidRootPart:GetPropertyChangedSignal("Color"))) do
    v:Disable()
end

for i,v in pairs(getconnections(plr.Character.HumanoidRootPart:GetPropertyChangedSignal("BrickColor"))) do
    v:Disable()
end

for i,v in pairs(getconnections(plr.Character.Humanoid:GetPropertyChangedSignal("WalkSpeed"))) do
    v:Disable()
end

local ground

local part = workspace:FindPartOnRay(Ray.new(plr.Character.Torso.Position, Vector3.new(0, -100, 5)))
if part then
    ground = part
end

local tracking = false
local player

function updateNearestPlayerWithBall()
    local dist = 9e9
    for i,v in pairs(game.Players:GetPlayers()) do
        if v.Name ~= plr.Name and v.Character and v.Character:FindFirstChild("Basketball") and not plr.Character:FindFirstChild("Basketball") and (plr.Character.Torso.Position - v.Character.Torso.Position).Magnitude < 50 then
            local mag = (plr.Character.Torso.Position - v.Character.Torso.Position).Magnitude
            if dist > mag then
                dist = mag
                player = v
            end
        end
    end
end

if _G.hook ~= nil then
    _G.hook = ""; _G.hook = hookmetamethod(game, "__index", newcclosure(function(self, idx)
        if tostring(self) == "HumanoidRootPart" and idx == "Size" then
            return Vector3.new(2, 2, 1)
        elseif tostring(self) == "HumanoidRootPart" and idx == "BrickColor" then
            return BrickColor.new("Medium stone grey")
        elseif tostring(self) == "HumanoidRootPart" and idx == "Color" then
            return Color3.fromRGB(163, 162, 165)
        elseif tostring(self) == "Humanoid" and idx == "WalkSpeed" then
            return 16
        end
        return hook(self, idx)
    end))
end

shootingEvent.OnClientEvent:Connect(function(newKey)
    _G.key = newKey
end)

function setup()
    local dist, goal = 9e9, nil
    for i,v in pairs(workspace.Courts:GetDescendants()) do
        if v.Name == "Swish" and v:IsA("Sound") and plr.Character and plr.Character:FindFirstChild("Torso") then
            local mag = (plr.Character.Torso.Position - v.Parent.Position).Magnitude
            if dist > mag then
                dist = mag; goal = v.Parent
            end
        end
    end
    return dist, goal
end

function power()
    return plr.Power
end

function changePower(goal)
    power().Value = goal
end

function table(a, b)
    local args = {
X1 = a.X,
Y1 = a.Y,
Z1 = a.Z,
X2 = b.X,
Y2 = b.Y,
Z2 = b.Z
};

return {args[_G.method[1]], args[_G.method[2]], args[_G.method[3]], args[_G.method[4]], args[_G.method[5]], args[_G.method[6]]}
end

function arc()
    local dist, goal = setup()

    dist = math.floor(dist)
    print(dist)
    if dist == 12 or dist == 13 then
        return 15
    elseif dist == 14 or dist == 15 then
        return 20
    elseif dist == 16 or dist == 17 then
        return 15
    elseif dist == 18 then
        return 25
    elseif dist == 19 then
        return 20
    elseif dist == 20 or dist == 21 then
        return 20
    elseif dist == 22 or dist == 23 then
        return 25
    elseif dist == 24 or dist == 25 then
        return 20
    elseif dist == 26 then
        return 15
    elseif dist == 27 or dist == 28 then
        return 25
    elseif dist == 29 or dist == 30 then
        return 20
    elseif dist == 31 then
        return 15
    elseif dist == 32 or dist == 33 then
        return 30
    elseif dist == 34 or dist == 35 or dist == 36 then
        return 25
    elseif dist == 37 or dist == 38 then
        return 35
    elseif dist == 39 or dist == 40 then
        return 30
    elseif dist == 41 then
        return 25
    elseif dist == 42 or dist == 43 then
        return 40
    elseif dist == 44 then
        return 35
    elseif dist == 45 or dist == 46 then
        return 30
    elseif dist == 47 or dist == 48 then
        return 45
    elseif dist == 49 then
        return 40
    elseif dist == 50 then
        return 35
    elseif dist == 51 then
        return 50
    elseif dist == 52 then
        return 55
    elseif dist == 53 or dist == 54 then
        return 50
    elseif dist == 55 then
        return 45
    elseif dist == 56 then
        return 40
    elseif dist == 57 or dist == 58 then
        return 55
    elseif dist == 59 or dist == 60 or dist == 61 then
        return 50
    elseif dist == 62 or dist == 63 then
        return 65
    elseif dist == 64 then
        return 55
    elseif dist == 65 then
        return 60
    elseif dist == 66 or dist == 67 then
        return 50
    elseif dist == 68 or dist == 69 then
        return 75
    elseif dist == 70 or dist == 71 then
        return 70
    elseif dist == 72 then
        return 65
    elseif dist == 73 then
        return 60
    elseif dist == 74 then
        return 50
    elseif jumping then
        if dist == 9 or dist == 10 then
            return 20
        elseif dist == 11 or dist == 12 then
            return 15
        end
    end
end

function getNearestPart(torso)
    local dist, part = 9e9
    for i,v in pairs(plr.Character:GetChildren()) do
        if v:IsA("Part") and torso then
            local mag = (v.Position - torso.Position).Magnitude
            if dist > mag then
                dist = mag
                part = v
            end
        end
    end
    return part
end

function stepped() pcall(function()
    if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") and _G.Aimbot then
        local pwr = power()
        local dist, goal = setup()
        local root = plr.Character.HumanoidRootPart
   
        dist = math.floor(dist)

        if root and hasBall then
            root.Size = Vector3.new(2.1, 2.1, 1.1)
            root.BrickColor = BrickColor.new("Lime green")
            root.Material = Enum.Material.Neon
           
            if dist >= 13 and dist <= 16 then
                changePower(30)
                root.Transparency = 0
            elseif dist >= 17 and dist <= 21 then
                changePower(35)
                root.Transparency = 0
            elseif dist >= 22 and dist <= 26 then
                changePower(40)
                root.Transparency = 0
            elseif dist >= 27 and dist <= 31 then
                changePower(45)
                root.Transparency = 0
            elseif dist >= 32 and dist <= 36 then
                changePower(50)
                root.Transparency = 0
            elseif dist >= 37 and dist <= 41 then
                changePower(55)
                root.Transparency = 0
            elseif dist >= 42 and dist <= 46 then
                changePower(60)
                root.Transparency = 0
            elseif dist >= 47 and dist <= 50 then
                changePower(65)
                root.Transparency = 0
            elseif dist >= 51 and dist <= 56 then
                changePower(70)
                root.Transparency = 0
            elseif dist >= 57 and dist <= 61 then
                changePower(75)
                root.Transparency = 0
            elseif dist >= 62 and dist <= 67 then
                changePower(80)
                root.Transparency = 0
            elseif dist >= 68 and dist <= 74 then
                changePower(85)
                root.Transparency = 0
            elseif jumping and dist == 9 or dist == 10 or dist == 11 or dist == 12 then
                changePower(25)
                root.Transparency = 0
            else
                root.Transparency = 1
            end
        elseif root and not hasBall and _G.Aimbot then
            root.Transparency = 1
        elseif root and not _G.Aimbot then
            root.Transparency = 1
        end
    end
   
    updateNearestPlayerWithBall()
   
    if _G.WS ~= 16 and plr.Character:WaitForChild("Humanoid").WalkSpeed ~= 0 then
        plr.Character:WaitForChild("Humanoid").WalkSpeed = _G.WS
    end

    if _G.Autogaurd and tracking and player and plr.Character and plr.Character:FindFirstChild("Humanoid") and not plr.Character:FindFirstChild("Basketball") and player.Character and player.Character:FindFirstChild("Basketball") then
        plr.Character.Humanoid:MoveTo(player.Character.Basketball:FindFirstChildOfClass("Part").Position + player.Character.Torso.CFrame.LookVector + ((player.Character.Humanoid.MoveDirection * 2) + (plr.Character.Torso.Velocity.Unit * 3)))
       
        if (player.Character.Torso.Position.Y - ground.Position.Y) > 2.5 then
            plr.Character.Humanoid.Jump = true
        end
    elseif tracking and player ~= nil and player.Character and plr.Character and plr.Character:FindFirstChild("Basketball") or not player.Character:FindFirstChild("Basketball") then
        tracking = false
        return
    end
   
    for i,v in pairs(game.Players:GetPlayers()) do
        if (v.Name ~= plr.Name and v.Character and plr.Character) and _G.Reach then
            local nearestPart = getNearestPart(v.Character.Torso)
            for z,x in pairs(v.Character:GetChildren()) do
                if ((nearestPart.Position - v.Character.Torso.Position).Magnitude < 8) then
                    if (x:IsA("Tool") or x:IsA("Folder")) then
                        firetouchinterest(nearestPart, x:FindFirstChildOfClass("Part"), 0)
                        task.wait()
                        firetouchinterest(nearestPart, x:FindFirstChildOfClass("Part"), 1)
                    elseif (x:IsA("BasePart") and string.find(x.Name:lower(), "ball")) then
                        firetouchinterest(nearestPart, x, 0)
                        task.wait()
                        firetouchinterest(nearestPart, x, 1)
                    end
                end
            end
        end
    end
end) end

function shoot()
    local dist, goal = setup()
    local pwr = power()
    local arc = arc()
   
    if arc ~= nil and plr.Character and plr.Character:FindFirstChild("Humanoid") then
        local args = table(plr.Character.Torso.Position, (goal.Position + Vector3.new(0, arc, 0) - plr.Character.HumanoidRootPart.Position + plr.Character.Humanoid.MoveDirection).Unit)
   
        shootingEvent:FireServer(
            plr.Character.Basketball,
            pwr.Value,
            args,
            _G.key
        )
    end
end

function jumped()
    if _G.Aimbot and plr.Character and hasBall and plr.Character:FindFirstChild("HumanoidRootPart") and plr.Character.HumanoidRootPart.Transparency == 0 then
        jumping = true
        task.wait(0.325)
        shoot()
        task.wait(0.1)
        jumping = false
    end
end

function added(v)
    if v.Name == "Basketball" then
        task.wait(0.5)
        hasBall = true
    end
end

function removed(v)
    if v.Name == "Basketball" then
        hasBall = false
    end
end

function began(key, gpe)
    if not gpe and key.KeyCode == Enum.KeyCode.U and _G.Autogaurd then
        updateNearestPlayerWithBall()
        if not tracking then
            tracking = true
        else
            tracking = false
        end
    end
end

_G.input = plr.Character.Humanoid.Jumping:Connect(jumped)
_G.added = plr.Character.ChildAdded:Connect(added)
_G.removed = plr.Character.ChildRemoved:Connect(removed)
_G.stepped = rs.Stepped:Connect(stepped)
_G.began = uis.InputBegan:Connect(began)

_G.charAdded = plr.CharacterAdded:Connect(function(ch)
    _G.input = ch:WaitForChild("Humanoid").Jumping:Connect(jumped)
    _G.added = ch.ChildAdded:Connect(added)
    _G.removed = ch.ChildRemoved:Connect(removed)
   
    for i,v in pairs(getconnections(ch:WaitForChild("HumanoidRootPart"):GetPropertyChangedSignal("Size"))) do
        v:Disable()
    end
    for i,v in pairs(getconnections(ch:WaitForChild("HumanoidRootPart"):GetPropertyChangedSignal("BrickColor"))) do
        v:Disable()
    end
    for i,v in pairs(getconnections(ch:WaitForChild("HumanoidRootPart"):GetPropertyChangedSignal("Color"))) do
        v:Disable()
    end
    for i,v in pairs(getconnections(ch:WaitForChild("Humanoid"):GetPropertyChangedSignal("WalkSpeed"))) do
        v:Disable()
    end
end)
